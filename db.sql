----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

create table public.cards (
  card_id bigint not null,
  name text not null,
  descr text not null,
  attack integer null,
  defence integer null,
  level integer null,
  archetype public.archetype null,
  frame_type public.frametype null,
  race public.race null,
  card_type public.card_type null,
  attribute public.attribute null,
  created_at timestamp with time zone null default (now() AT TIME ZONE 'utc'::text),
  constraint card_pkey primary key (card_id),
  constraint card_card_id_key unique (card_id)
) TABLESPACE pg_default;

create index IF not exists "card_level_archetype_frameType_race_card_type_attribute_atk_idx" on public.cards using btree (
  level,
  archetype,
  frame_type,
  race,
  card_type,
  attribute,
  attack,
  defence,
  name
) TABLESPACE pg_default;

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

create table public.card_images (
  card_id bigint not null,
  image_url text not null,
  created_at timestamp with time zone null default (now() AT TIME ZONE 'utc'::text),
  constraint card_images_pkey primary key (card_id),
  constraint card_images_card_id_key unique (card_id),
  constraint card_images_card_id_fkey foreign KEY (card_id) references cards (card_id) on update CASCADE on delete CASCADE
) TABLESPACE pg_default;

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

create table public.character_images (
  character_id bigint not null,
  image_id bigint not null,
  created_at timestamp with time zone not null default now(),
  constraint character_images_pkey primary key (character_id, image_id),
  constraint character_images_image_id_key unique (image_id),
  constraint character_images_character_id_fkey foreign KEY (character_id) references characters (character_id) on update CASCADE on delete CASCADE,
  constraint character_images_image_id_fkey foreign KEY (image_id) references images (image_id) on update CASCADE on delete CASCADE
) TABLESPACE pg_default;

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

create table public.characters (
  character_id bigint generated by default as identity not null,
  name text not null,
  bio text not null,
  wiki_page_url text not null,
  franchise_id bigint not null,
  constraint characters_pkey primary key (character_id),
  constraint characters_id_key unique (character_id),
  constraint characters_franchise_id_fkey foreign KEY (franchise_id) references franchises (franchise_id) on update CASCADE on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists characters_name_idx on public.characters using btree (name) TABLESPACE pg_default;

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

create table public.deck (
  deck_id bigint generated by default as identity not null,
  descr text null,
  name text not null,
  character_id bigint null,
  created_at timestamp with time zone not null default now(),
  franchise_id bigint not null,
  constraint deck_pkey primary key (deck_id),
  constraint deck_deck_id_key unique (deck_id),
  constraint deck_character_id_fkey foreign KEY (character_id) references characters (character_id) on update CASCADE on delete CASCADE,
  constraint deck_franchise_id_fkey foreign KEY (franchise_id) references franchises (franchise_id) on update CASCADE on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists deck_character_id_name_idx on public.deck using btree (character_id, name) TABLESPACE pg_default;

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

create table public.deck_cards (
  card_id bigint not null,
  deck_id bigint not null,
  num integer not null default 1,
  created_at timestamp with time zone not null default now(),
  constraint deck_cards_pkey primary key (card_id, deck_id),
  constraint deck_cards_card_id_fkey foreign KEY (card_id) references cards (card_id) on update CASCADE on delete CASCADE,
  constraint deck_cards_deck_id_fkey foreign KEY (deck_id) references deck (deck_id) on update CASCADE on delete CASCADE
) TABLESPACE pg_default;

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

create table public.franchises (
  franchise_id bigint generated by default as identity not null,
  descr text not null,
  logo_image_id bigint not null,
  release_date date not null,
  num_episodes integer not null,
  wiki_page_url text not null,
  created_at timestamp with time zone not null default (now() AT TIME ZONE 'utc'::text),
  name text not null,
  constraint yugioh_franchises_pkey primary key (franchise_id),
  constraint yugioh_franchises_franchise_id_key unique (franchise_id),
  constraint yugioh_franchises_logo_image_id_fkey foreign KEY (logo_image_id) references images (image_id) on update CASCADE on delete CASCADE
) TABLESPACE pg_default;

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

create table public.images (
  image_id bigint generated by default as identity not null,
  image_url text not null,
  descr text not null,
  created_at timestamp with time zone not null default now(),
  constraint images_pkey primary key (image_id),
  constraint images_id_key unique (image_id)
) TABLESPACE pg_default;

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

create table public.items (
  item_id integer generated by default as identity not null,
  item_type public.item_type not null,
  image_id bigint not null,
  descr text not null,
  created_at timestamp with time zone not null default now(),
  name text not null,
  wiki_page_url text not null,
  franchise_id bigint not null,
  constraint items_pkey primary key (item_id),
  constraint items_id_key unique (item_id),
  constraint items_franchise_id_fkey foreign KEY (franchise_id) references franchises (franchise_id) on update CASCADE on delete CASCADE,
  constraint items_image_id_fkey foreign KEY (image_id) references images (image_id) on update CASCADE on delete CASCADE
) TABLESPACE pg_default;

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

create table public.persons (
  person_id bigint generated by default as identity not null,
  name text not null,
  bio text not null,
  birth date not null,
  death date null,
  instagram_url text null,
  x_url text null,
  wikipedia_url text null,
  yugioh_wiki_url text null,
  website_url text null,
  occupation public.occupation_type null,
  nationality public.nationality_type null,
  created_at timestamp with time zone not null default now(),
  image_id bigint null,
  constraint persons_pkey primary key (person_id),
  constraint persons_person_id_key unique (person_id),
  constraint persons_image_id_fkey foreign KEY (image_id) references images (image_id) on update CASCADE on delete CASCADE
) TABLESPACE pg_default;

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

create table public.songs (
  song_id bigint generated by default as identity not null,
  song_url text not null,
  franchise_id bigint not null,
  created_at timestamp with time zone not null default now(),
  name text not null,
  constraint songs_pkey primary key (song_id),
  constraint songs_song_id_key unique (song_id),
  constraint songs_franchise_id_fkey foreign KEY (franchise_id) references franchises (franchise_id) on update CASCADE on delete CASCADE
) TABLESPACE pg_default;

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

create table public.trivias (
  trivia_id bigint generated by default as identity not null,
  descr text not null,
  created_at timestamp with time zone not null default now(),
  constraint trivia_pkey primary key (trivia_id)
) TABLESPACE pg_default;

----------------------------------------------------------------------------------
----------------------------------------------------------------------------------

create table public.trivia_references (
  trivia_id bigint not null,
  reference_id bigint not null,
  reference_type public.trivia_reference_type not null,
  created_at timestamp with time zone not null default (now() AT TIME ZONE 'utc'::text),
  constraint trivia_references_pkey primary key (trivia_id, reference_id, reference_type),
  constraint trivia_references_trivia_id_fkey foreign KEY (trivia_id) references trivias (trivia_id) on update CASCADE on delete CASCADE
) TABLESPACE pg_default;